{"version":3,"file":"static/js/53.3770c1e4.chunk.js","mappings":"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","sources":["components/SignUpForm.jsx","utils/cookie.js"],"sourcesContent":["\r\nimport {useForm} from \"react-hook-form\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Link, useNavigate } from \"react-router-dom\"\r\nimport {signUpUser} from \"../utils/slice/UserDataSlice\"\r\nimport {setCookie, getCookie} from \"../utils/cookie\"\r\nimport { useEffect } from \"react\"\r\nconst SignUpForm = () => {\r\n    // if the access token is present then redirect to HOME page || No need of Form\r\n    useEffect(()=>{\r\n        if(getCookie(\"at\")){\r\n            return navigate(\"/\")\r\n        }\r\n    }, [])\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    // read userData state from redux\r\n    const currentUser = useSelector((state) => state.userData.user)\r\n    const isLoading = useSelector((state) => state.userData.isLoading)\r\n    const error = useSelector((state) => state.userData.error)\r\n  \r\n    const rhfOnSubmit = (data) =>{\r\n        \r\n        // calling redux thunk function to handle sign up \r\n        dispatch(signUpUser(data))\r\n\r\n    }\r\n    \r\n\r\n    const {register, handleSubmit, formState: {errors, isSubmitting}} = useForm()\r\n\r\n\r\n    // check whether sign up happened or not\r\n\r\n    if(!isLoading && !error && currentUser){\r\n        console.log(\" Signed UP üòé \")\r\n        const {stsTokenManager} = JSON.parse(currentUser)\r\n        \r\n        // need to set the access token as cookie and redirect to Home page\r\n        setCookie(\"at\", stsTokenManager.accessToken, 30)\r\n        return navigate(\"/\")\r\n    }\r\n    // not signed up then render the below form\r\n    return (\r\n        <div className=\" w-full h-full ||  md:w-[450px] md:h-[550px]  ||  bg-black bg-opacity-80\">\r\n            <div className=\"mt-52 p-16 || md:mt-0\">\r\n                <h1 className=\"text-white text-4xl font-bold\">\r\n                    Sign Up\r\n                </h1>\r\n                <form onSubmit={handleSubmit(rhfOnSubmit)}>\r\n                    <div className=\"mt-10 text-white\">\r\n                    <input className=\"my-3 bg-black border-[1px] border-gray-500 w-72 pl-3 py-3.5 rounded-md\" \r\n                            type=\"text\" name=\"email\"  placeholder=\"Username\" \r\n                            {...register(\"username\", {\r\n                            required: \"Please enter your Username\",\r\n                            minLength: {\r\n                                value: 5,\r\n                                message: \"Username must be at least 5 characters long!\"\r\n                            }\r\n                        })}/>\r\n                        {errors.username && <p className=\"text-red-600\"> {errors.username?.message || \"Invalid Input\"} </p>}\r\n\r\n                    <input className=\"my-3 bg-black border-[1px] border-gray-500 w-72 pl-3 py-3.5 rounded-md\" \r\n                        type=\"email\" name=\"email\"  placeholder=\"Email or Mobile Number\" \r\n                        {...register(\"email\", {\r\n                        required: \"Please enter your email or mobile number!\",\r\n                        pattern: {\r\n                            value: /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/,\r\n                            message: \"Please enter a valid email address!\"\r\n                        }\r\n                    })}/>\r\n                    {errors.email && <p className=\"text-red-600\"> {errors.email?.message || \"Invalid Input\"} </p>}\r\n\r\n                    <input className=\"my-3 bg-black border-[1px] border-gray-500 w-72 pl-3 py-3.5 rounded-md\" type=\"password\" name=\"password\"  placeholder=\"Password\" {...register(\"password\", {\r\n                        required: \"Please Enter Password\",\r\n                        minLength: {\r\n                            value:8,\r\n                            message: \"Password must be at least 8 characters long!\"\r\n                        }\r\n                    })}/>\r\n                    {errors.password && <p className=\"text-red-600\"> {errors.password?.message || \"Invalid Input\"}</p>}\r\n                    \r\n                    </div>\r\n                    <div className=\"my-3\">\r\n                        <input className=\"bg-red-600 w-72 text-white p-2 cursor-pointer rounded-md\" type=\"submit\" disabled={isLoading} value={isLoading ? \"Loading\": \"Sign Up\"} />\r\n                    </div>\r\n                    {error && <p className=\"text-red-600 mt-4\">{error}</p>}\r\n                </form>\r\n                <p className=\"text-white mt-4\">If you're a user already then <Link to=\"/signin\" className=\"text-red-600 font-bold\"> sign-in</Link>. </p>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpForm","// Function to set a cookie\r\nexport const setCookie = (name, value, mins) => {\r\n  let expires = \"\";\r\n  if (mins) {\r\n    const date = new Date();\r\n    date.setTime(date.getTime() + mins * 60 * 1000);\r\n    expires = \"; expires=\" + date.toUTCString();\r\n  }\r\n  document.cookie = name + \"=\" + value + expires + \"; path=/\";\r\n};\r\n\r\n// Function to get a cookie by name\r\nexport const getCookie = (name) => {\r\n  const value = `; ${document.cookie}`;\r\n  const parts = value.split(`; ${name}=`);\r\n  if (parts.length === 2) return parts.pop().split(\";\").shift();\r\n  return null;\r\n};\r\n\r\nexport const deleteCookie = (name) => {\r\n  console.log(\"deleteCookie üê∂\");\r\n  document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\r\n};\r\n"],"names":["SignUpForm","_errors$username","_errors$email","_errors$password","useEffect","getCookie","navigate","dispatch","useDispatch","useNavigate","currentUser","useSelector","state","userData","user","isLoading","error","register","handleSubmit","formState","errors","isSubmitting","useForm","console","log","stsTokenManager","JSON","parse","setCookie","accessToken","_jsx","className","children","_jsxs","onSubmit","data","signUpUser","type","name","placeholder","required","minLength","value","message","username","pattern","email","password","disabled","Link","to","mins","expires","date","Date","setTime","getTime","toUTCString","document","cookie","parts","split","length","pop","shift","deleteCookie"],"sourceRoot":""}